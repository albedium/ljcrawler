apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'idea'

group = 'com.gmail.kompotik'
version = '0.0.2'

sourceCompatibility = 1.6
targetCompatibility = 1.6

idea {
  project {
    jdkName = '1.6'
    ipr {
      withXml { provider ->
        provider.node.component.find { it.@name == 'VcsDirectoryMappings' }.mapping.@vcs = 'Git'
      }
    }
  }
}

repositories {
  mavenRepo url: "http://repo1.maven.org/maven2"
  mavenRepo url: "http://snapshots.repository.codehaus.org/"
}

dependencies {
  compile 'com.google.code.gson:gson:1.7.1'
  compile 'com.google.guava:guava:r09'
  compile 'com.google.inject:guice:3.0'
  compile 'commons-io:commons-io:2.0.1'
  compile 'commons-lang:commons-lang:2.6'
  compile 'joda-time:joda-time:1.6.2'
  compile 'org.ccil.cowan.tagsoup:tagsoup:1.2'
  compile 'org.apache.httpcomponents:httpclient:4.1.1'
  compile 'org.apache.httpcomponents:httpcore:4.1'
  compile 'org.yaml:snakeyaml:1.8'
  compile 'org.codehaus.groovy:groovy:1.8.0'
  compile 'xalan:xalan:2.7.1'
  testCompile 'junit:junit:4.8.2'
}

//manifest.attributes(
//  "Main-Class": "com.gmail.kompotik.ljcrawler.EntryPoint",
//)

jar {
    manifest {
        def manifestClasspath = configurations.runtime.collect { it.getName() }.join(' ')
        attributes 'Class-Path': manifestClasspath
    }
}

task zip(type: Zip) {
  from jar.outputs.files

  from configurations.runtime {
    into '/lib/'
  }
  from ('.') {
    include 'ljcrawler.properties'
    into '/'
  }
  from ('userConfig') {
    include '*.groovy'
    into '/userConfig/'
  }
  from('scripts') {
    fileMode = 0755
    include '**/*.sh'
    into '/'
  }
}

uploadArchives {
  repositories.mavenDeployer {
    repository(url: "~/.m2/repository/")
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '1.0'
}

